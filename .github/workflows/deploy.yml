name: Hexo Blog Delopy

on:
  push:
    branches:
      - source


env: # 统一设置环境变量
  GIT_USER: w5l6j9
  GIT_EMAIL: 381414439@qq.com
  THEME_REPO: git/next # 你使用的主题仓库地址
  THEME_BRANCH: master
  DEPLOY_REPO: git/w5l6j9.github.io # 你用来发布github pages的仓库地址
  DEPLOY_BRANCH: master
  GITHUB_TOKEN: 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

jobs:
  build:
    runs-on: ubuntu-latest

    steps: # 一个job由多个 step 组成，本博的由7个step组成
      # 1. Checkout hexo.git 中的内容
      - name: Checkout Hexo repo
        # 检出项目，如果不指定名称，默认使用运行Github Action 的仓库，即hexo.git
        uses: actions/checkout@v2

      # 2. Checkout next.git 主题内容到 theme目录
      - name: Checkout Theme repo
        # actions/checkout 就是Acton工具，实现checkout项目，每个action也是一个git仓库
        # 可以直接通过 github.com/工具名称进行访问，即github.com/actions/checkout
        uses: actions/checkout@v2
        with:
          repository: ${{ env.THEME_REPO }} # 要checkout的仓库地址
          ref: ${{ env.THEME_BRANCH }}
          path: themes/next # 要checkout到的路径

      # 3. 安装 node.js 环境
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v2 # 使用actions/setup-node安装nodejs
        with:
          node-version: ${{ matrix.node }}

      # 4. 安装Heox
      - name: Install Hexo
        run: | # 运行command命令
          npm install -g hexo-cli
          npm install

      # 5. 使用Hexo生成静态页面
      - name: Deploy Hexo
        run: |
          hexo clean
          hexo generate
          hexo deploy

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ env.GITHUB_TOKEN }}
          # 部署到 master 分支
          target_branch: master
          external_repository: ${{ env.DEPLOY_REPO }} # Hexo.git 的仓库地址
          publish_branch: ${{ env.DEPLOY_BRANCH }}
          publish_dir: ./public # 使用Hexo/hugo等生成静态页面的目录
          user_name: ${{ env.GIT_USER }}
          user_email: ${{ env.GIT_EMAIL }}
          GH_PAT: ${{ secrets.GH_PAT }}
